x-logging:
  &default-logging
  logging:
    driver: json-file
    options:
      max-size: 100M

services:
  contest-service:
    image: ghcr.io/daniil-vl/contest-service:latest
    container_name: contest-service
    env_file: ".env"
    ports:
      - "8080:8080"
    networks:
      - backend
      - elk

  submission-service:
    image: ghcr.io/daniil-vl/submission-service:latest
    container_name: submission-service
    env_file: ".env"
    ports:
      - "8090:8090"
    networks:
      - backend
      - elk
      - judge0

  contest_db:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: contest_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - contest_postgresql:/var/lib/postgresql/data
    networks:
      - backend

  submission_db:
    image: postgres:16
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: submission_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - submission_postgresql:/var/lib/postgresql/data
    networks:
      - backend

  liquibase-contest-db-migrations:
    image: liquibase/liquibase:4.25
    depends_on:
      - contest_db
    command:
      - --changelog-file=master.yml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://contest_db:5432/contest_db
      - --username=postgres
      - --password=postgres
      - update
    volumes:
      - ./contest-service/src/main/resources/migrations:/liquibase/changelog
    networks:
      - backend

  liquibase-submission-db-migrations:
    image: liquibase/liquibase:4.25
    depends_on:
      - submission_db
    command:
      - --changelog-file=master.yml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://submission_db:5432/submission_db
      - --username=postgres
      - --password=postgres
      - update
    volumes:
      - ./submission-service/src/main/resources/migrations:/liquibase/changelog
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:4.0-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - backend

  #  Judge0
  judge0-server:
    image: judge0/judge0:1.13.1
    hostname: judge0-server
    container_name: judge0-server
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    ports:
      - "2358:2358"
    privileged: true
    <<: *default-logging
    restart: always
    networks:
      - judge0

  judge0-workers:
    image: judge0/judge0:1.13.1
    hostname: judge0-workers
    container_name: judge0-workers
    command: [ "./scripts/workers" ]
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    privileged: true
    <<: *default-logging
    restart: always
    networks:
      - judge0

  judge0-db:
    image: postgres:16.2
    env_file: judge0.conf
    hostname: judge0-db
    container_name: judge0-db
    volumes:
      - judge0-data:/var/lib/postgresql/data/
    <<: *default-logging
    restart: always
    networks:
      - judge0

  judge0-redis:
    image: redis:7.2.4
    hostname: judge0-redis
    container_name: judge0-redis
    command: [
      "bash", "-c",
      'docker-entrypoint.sh --appendonly no --requirepass "$$REDIS_PASSWORD"'
    ]
    env_file: judge0.conf
    <<: *default-logging
    restart: always
    networks:
      - judge0

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-oss
    ports:
      - "3000:3000"

  elasticsearch:
    image: elasticsearch:7.9.1
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data/
      - ./logs/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
    networks:
      - elk

  logstash:
    image: logstash:7.9.1
    container_name: logstash
    ports:
      - "5044:5044"
      - "5045:5045"
      - "9600:9600"
    volumes:
      - ./logs/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - logstash-data:/usr/share/logstash/data
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:7.9.1
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./logs/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
      - kibana-data:/usr/share/kibana/data
    networks:
      - elk
    depends_on:
      - elasticsearch


volumes:
  contest_postgresql: { }
  submission_postgresql: { }
  judge0-data: { }
  rabbitmq: { }
  prometheus-data: { }
  elasticsearch-data: { }
  logstash-data: { }
  kibana-data: { }

networks:
  backend: { }
  judge0: { }
  elk: { }